{% extends "base.html.j2" %}

{% block content %}
<div class="w-100 db mb5">
  <a href="{{ url_for('index') }}" class="link pa2 f4 br2 pa2 bg-blue white mr2">Today</a>
  <a href="{{ url_for('index', focus_date=focus_date|add_days(-7)) }}" class="link pa2 f4 br2 pa2 bg-blue white mr2">&lt; Previous week</a>
  <a href="{{ url_for('index', focus_date=focus_date|add_days(7)) }}" class="link pa2 f4 br2 pa2 bg-blue white mr2">Next week &gt;</a>
  <span class="header-font ml3 f3">
    {{ focus_date|date_range(last_day_of_week) }}
  </span>
</div>
<div id="app">
<v-app>
  <v-row>
    <v-col
        cols="3"
    >
      <v-date-picker
        v-model="dateRange"
        @click:date="selectDateRange"
        :first-day-of-week="firstDayOfWeek"
        show-adjacent-months
        range
        no-title
      ></v-date-picker>
    </v-col>
        <v-col
        cols="9">
            <v-sheet height="800">
                <v-overlay :value="loading" :absolute="true">
                <v-progress-circular
                    indeterminate
                    size="64"
                ></v-progress-circular>
                </v-overlay>
                <v-calendar
                ref="calendar"
                v-model="focus"
                :events="events"
                color="primary"
                type="week"
                event-overlap-mode="stack"
                :weekdays="weekdays"
                @change="onChange"
                ></v-calendar>
            </v-sheet>
        </v-col>
    </v-row>
</v-app>
</div>

<!--https://vuetifyjs.com/en/components/calendars/#type-day-->
{% endblock %}

{% block bodyscripts %}
{{ super() }}
<script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
<script>
const EVENT_ENDPOINT = {{ url_for('events_view', _external=true)|tojson|safe }};
const SETTINGS = {{ calendar_settings|tojson|safe }};
const FOCUS_DATE = {{ focus_date.strftime('%Y-%m-%d')|tojson|safe }};
const CALENDAR_URL_TEMPLATE = {{ calendar_url_template|tojson|safe }};
Vue.config.delimiters = ['[[', ']]']
new Vue({
    el: '#app',
    delimiters: ['[[', ']]'],
    vuetify: new Vuetify(),
    data: () => ({
      focus: FOCUS_DATE,
      weekdays: SETTINGS.weekdays,
      firstDayOfWeek: SETTINGS.firstDayOfWeek,
      calendarUrlTemplate: CALENDAR_URL_TEMPLATE,
      events: [],
      title: '',
      dateRange: [],
      loading: true,
    }),
    methods: {
      setToday () {
        this.focus = ''
      },
      prev () {
        this.$refs.calendar.prev(1)
      },
      next () {
        this.$refs.calendar.next(1)
      },
      onChange (span) {
          start_date = new Date(span.start.date)
          end_date = new Date(span.end.date)
          if(start_date.getFullYear() == end_date.getFullYear() && start_date.getMonth() == end_date.getMonth()) {
              this.title = start_date.toLocaleString('en-GB', { day: 'numeric' }) + "-" + end_date.toLocaleString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' })
          } else if(start_date.getFullYear() == end_date.getFullYear()) {
              this.title = start_date.toLocaleString('en-GB', { day: 'numeric', month: 'long' }) + " - " + end_date.toLocaleString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' })
          } else {
              this.title = start_date.toLocaleString('en-GB', { year: 'numeric', day: 'numeric', month: 'long' }) + " - " + end_date.toLocaleString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' })
          }
          this.dateRange = [span.start.date, span.end.date]
        this.loading = true;

        var url = new URL(EVENT_ENDPOINT)
        url.search = new URLSearchParams({
            start: span.start.date,
            end: span.end.date,
        }).toString();

        fetch(url).then((response) => {
            return response.json()
        }).then((json) => {
            this.events = json.events;
            this.loading = false;
        })
      },
      selectDateRange(date) {
          the_date = new Date(date)
          if(the_date.getDay() == 0) {
              the_date.setDate(the_date.getDate() - 2)
          } else if(the_date.getDay() == 6) {
              the_date.setDate(the_date.getDate() - 1)
          }
          location.href = this.calendarUrlTemplate.replace(SETTINGS.urlReplacement, the_date.toISOString().split('T')[0])
      },
    },
    mounted () {
      this.$refs.calendar.scrollToTime('07:00')
    },
})
</script>
{% endblock %}

{% block headscripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.6.0/chart.min.js" integrity="sha512-GMGzUEevhWh8Tc/njS0bDpwgxdCJLQBWG3Z2Ct+JGOpVnEmjvNx6ts4v6A2XJf1HOrtOsfhv3hBKpK9kE5z8AQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
{{ super() }}
{% endblock %}